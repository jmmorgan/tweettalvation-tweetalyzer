%div{id: "svg-#{@twitter_id}"}

:javascript


  $(document).ready(function(){
    // Grokked from http://blockbuilder.org/mbostock/882152
    // and https://bl.ocks.org/mbostock/3887051
    var margin = {top: 20, right: 30, bottom: 30, left: 40},
        width = 960 - margin.left - margin.right,
        height = 500 - margin.top - margin.bottom;
    
    
    d3.csv("timeline_graph_data?t=" + Math.floor(Date.now() / 1000) + "&twitter_id=#{@twitter_id}", function(error, data) {
      if (error) throw error;
      
      var sentimentNames = d3.keys(data[0]).filter(function(key) { return key !== "Time"; });

      data.forEach(function(d) {
        d.sentiments = sentimentNames.map(function(name) { return {name: name, value: +d[name]}; });
      });
      
      var y = d3.scaleLinear()
        .domain([0, d3.max(data, function(d) { return d3.max(d.sentiments, function(d) { return d.value; }); })])
        .range([height, 0]);
      
      var x0 = d3.scaleBand()
          .domain(data.map(function(d) { return d.Time; }))
          .range([0, width])
          .paddingInner(0.05);
      
      var x1 = d3.scaleBand()
          .domain(sentimentNames)
          .range([0, x0.bandwidth()]);

      var xAxis = d3.axisBottom()
          .scale(x0);
      
      var yAxis = d3.axisLeft()
          .scale(y);

      var color = d3.scaleOrdinal()
        .range(["green", "grey", "red"]);
          
      
      var svg = d3.select("#svg-#{@twitter_id}").append("svg")
          .attr("width", width + margin.left + margin.right)
          .attr("height", height + margin.top + margin.bottom)
        .append("svg:g")
          .attr("transform", "translate(" + margin.left + "," + margin.top + ")");
      
      svg.append("g")
          .attr("class", "y axis")
          .call(yAxis);
      
      svg.append("g")
          .attr("class", "x axis")
          .attr("transform", "translate(0," + height + ")")
          .call(xAxis);
      
      var time = svg.selectAll(".time")
        .data(data)
      .enter().append("g")
        .attr("class", "time")
        .attr("transform", function(d) { return "translate(" + x0(d.Time) + ",0)"; });
      
      time.selectAll("rect")
        .data(function(d) { return d.sentiments; })
      .enter().append("rect")
        .attr("width", x1.bandwidth())
        .attr("x", function(d) { console.log(d.name); console.log(x1(d.name)); return x1(d.name); })
        .attr("y", function(d) { return y(d.value); })
        .attr("height", function(d) { return height - y(d.value); })
        .style("fill", function(d) { return color(d.name); });
      
    });
  });

